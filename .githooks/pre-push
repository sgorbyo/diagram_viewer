#!/usr/bin/env bash
set -euo pipefail

RED="\033[31m"
GREEN="\033[32m"
YELLOW="\033[33m"
RESET="\033[0m"

REPO_ROOT="$(git rev-parse --show-toplevel)"
cd "$REPO_ROOT"

if ! command -v flutter >/dev/null 2>&1; then
  echo -e "${RED}[pre-push] Flutter not found in PATH. Aborting push.${RESET}"
  exit 1
fi

echo -e "${YELLOW}[pre-push] Detecting changed files...${RESET}"

# Read a single ref update from stdin (format: local_ref local_sha remote_ref remote_sha)
LOCAL_REF=""; LOCAL_SHA=""; REMOTE_REF=""; REMOTE_SHA=""
if IFS=' ' read -r LOCAL_REF LOCAL_SHA REMOTE_REF REMOTE_SHA; then
  :
fi

RUN_ROOT=false
RUN_EXAMPLE=false

ZERO_SHA="0000000000000000000000000000000000000000"
if [[ -z "${LOCAL_SHA}" || -z "${REMOTE_SHA}" || "${REMOTE_SHA}" == "${ZERO_SHA}" ]]; then
  # New branch or unknown range â†’ run full tests to be safe
  RUN_ROOT=true
  RUN_EXAMPLE=true
else
  CHANGED=$(git diff --name-only "${REMOTE_SHA}" "${LOCAL_SHA}")
  if [[ -z "$CHANGED" ]]; then
    echo -e "${GREEN}[pre-push] No changes detected. Skipping tests.${RESET}"
    exit 0
  fi

  # Determine if changes are docs-only
  NON_DOCS=$(echo "$CHANGED" | grep -Ev '^(docs/|refactoring_logs/|README\.md$)' || true)
  if [[ -z "$NON_DOCS" ]]; then
    echo -e "${GREEN}[pre-push] Docs-only changes detected. Skipping tests.${RESET}"
    exit 0
  fi

  # Decide which test sets to run
  if echo "$NON_DOCS" | grep -E '^example/' >/dev/null; then
    RUN_EXAMPLE=true
  fi
  # Any non-example, non-docs change triggers root tests
  NON_EXAMPLE=$(echo "$NON_DOCS" | grep -Ev '^example/' || true)
  if [[ -n "$NON_EXAMPLE" ]]; then
    RUN_ROOT=true
  fi
fi

if ! $RUN_ROOT && ! $RUN_EXAMPLE; then
  echo -e "${GREEN}[pre-push] No relevant code changes. Skipping tests.${RESET}"
  exit 0
fi

if $RUN_ROOT; then
  echo -e "${YELLOW}[pre-push] Running Flutter tests (root)${RESET}"
  flutter pub get >/dev/null
  flutter test -r expanded
else
  echo -e "${YELLOW}[pre-push] Skipping root tests (no relevant changes)${RESET}"
fi

if $RUN_EXAMPLE; then
  echo -e "${YELLOW}[pre-push] Running Flutter tests (example)${RESET}"
  (cd example && flutter pub get >/dev/null && flutter test -r expanded)
else
  echo -e "${YELLOW}[pre-push] Skipping example tests (no example changes)${RESET}"
fi

echo -e "${GREEN}[pre-push] OK.${RESET}"
exit 0


